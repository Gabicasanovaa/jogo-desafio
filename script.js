const perguntas = {
  zoeira: [
    "Dance como uma galinha por 20 segundos.",
    "Imite um famoso at√© algu√©m adivinhar.",
    "Fale tudo como se fosse um vampiro educado.",
    // Perguntas extras zoeira:
    "Fa√ßa uma dancinha rid√≠cula por 15 segundos.",
    "Finja que est√° preso numa gaiola e pe√ßa ajuda.",
    "Conte uma piada sem gra√ßa e espere a rea√ß√£o.",
    "Fale com um sotaque engra√ßado at√© a pr√≥xima rodada.",
    "Imite um animal que ningu√©m adivinhe.",
    "Fa√ßa cara de bravo por 10 segundos.",
    "Cante o refr√£o de uma m√∫sica infantil.",
    "Fale o alfabeto de tr√°s pra frente.",
    "Fa√ßa um som de rob√¥ at√© a sua pr√≥xima vez.",
    "Conte uma hist√≥ria engra√ßada que aconteceu com voc√™."
  ],
  picante: [
    "Diga a coisa mais ousada que j√° fez em um encontro.",
    "Revele seu crush secreto.",
    "Se pudesse trocar de corpo com algu√©m por um dia, quem seria e por qu√™?",
    // Perguntas extras picante:
    "Conte uma situa√ß√£o embara√ßosa que j√° viveu em um encontro.",
    "Fa√ßa um elogio ousado para algu√©m na sala.",
    "D√™ um beijo imagin√°rio na pessoa que estiver √† sua esquerda.",
    "Conte qual foi sua maior ‚Äúsa√≠da‚Äù de uma paquera.",
    "Diga uma coisa que ningu√©m aqui sabe sobre voc√™.",
    "Finja que est√° flertando com algu√©m por 20 segundos.",
    "Descreva seu encontro perfeito em detalhes.",
    "Fale qual foi sua maior conquista rom√¢ntica.",
    "Conte uma fantasia engra√ßada.",
    "Imite um personagem sexy de filme ou s√©rie."
  ],
  insano: [
    "Ligue para algu√©m e cante 'Parab√©ns'.",
    "Troque de roupa com algu√©m na roda.",
    "Mime uma luta entre dois marshmallows gigantes.",
    // Perguntas extras insano:
    "Fa√ßa uma coreografia maluca no meio da sala.",
    "Finja que est√° dirigindo um carro descontrolado.",
    "Imite um super-her√≥i em apuros.",
    "Fa√ßa uma m√≠mica de um animal estranho.",
    "Cante uma m√∫sica famosa com a voz desafinada.",
    "Conte uma mentira absurda e tente convencer todo mundo.",
    "Fa√ßa um ‚Äúduelo‚Äù de caretas com algu√©m.",
    "Finja que est√° em um reality show e justifique sua elimina√ß√£o.",
    "Fa√ßa um mon√≥logo dram√°tico sobre uma fruta.",
    "Dance como se tivesse apanhado de um fantasma."
  ]
};

// NOVOS CONTROLES
let jogadores = [];
let shots = {};
let desafiosCumpridos = {};
let jogadorAtual = "";
let rodadaAtual = 0;
const rodadaBonusACada = 5;
let desafiosUsados = {
  zoeira: [],
  picante: [],
  insano: [],
  todas: []
};

function tocarSom() {
  const audio = document.getElementById("sound-click");
  if (audio) audio.play();
}

function criarCamposJogadores() {
  const qtd = document.getElementById("qtdJogadores").value;
  const campos = document.getElementById("camposJogadores");
  campos.innerHTML = "";
  for (let i = 0; i < qtd; i++) {
    campos.innerHTML += `<input type="text" placeholder="Jogador ${i + 1}" id="jogador${i}"><br>`;
  }
  document.getElementById("inicio").style.display = "none";
  document.getElementById("jogo").style.display = "block";
}

function iniciarJogo() {
  jogadores = [];
  shots = {};
  desafiosCumpridos = {};
  rodadaAtual = 0;
  desafiosUsados = { zoeira: [], picante: [], insano: [], todas: [] };

  let i = 0;
  while (document.getElementById(`jogador${i}`)) {
    const nome = document.getElementById(`jogador${i}`).value.trim();
    if (nome) {
      jogadores.push(nome);
      shots[nome] = 0;
      desafiosCumpridos[nome] = 0;
    }
    i++;
  }

  if (jogadores.length < 1) {
    alert("Adicione pelo menos 1 jogador.");
    return;
  }

  document.getElementById("jogo").style.display = "none";
  document.getElementById("rodada").style.display = "block";
  proximaRodada();
}

function escolherPergunta(categoriaSelecionada) {
  let todas = [];

  if (categoriaSelecionada === "todas") {
    Object.values(perguntas).forEach(arr => todas.push(...arr));
  } else {
    todas = perguntas[categoriaSelecionada] || [];
  }

  // Verificar se todas as perguntas j√° foram usadas
  const usadas = desafiosUsados[categoriaSelecionada] || [];
  const restantes = todas.filter(p => !usadas.includes(p));

  if (restantes.length === 0) {
    // Resetar desafios se todos foram usados
    desafiosUsados[categoriaSelecionada] = [];
    return escolherPergunta(categoriaSelecionada);
  }

  const desafio = restantes[Math.floor(Math.random() * restantes.length)];
  desafiosUsados[categoriaSelecionada].push(desafio);

  return desafio;
}

function iniciarTimer() {
  // Timer removido ‚Äî sem limite de tempo
  document.getElementById("timer").innerText = "";
}

function proximaRodada() {
  // Sem clearInterval pois timer foi removido
  rodadaAtual++;

  let novoJogador;
  do {
    novoJogador = jogadores[Math.floor(Math.random() * jogadores.length)];
  } while (novoJogador === jogadorAtual && jogadores.length > 1);
  jogadorAtual = novoJogador;

  let categoria = document.getElementById("categoria").value;

  // RODADA B√îNUS
  let desafio;
  if (rodadaAtual % rodadaBonusACada === 0) {
    desafio = "üéÅ RODADA B√îNUS: TODOS devem imitar um pato ou beber!";
  } else {
    desafio = escolherPergunta(categoria);
  }

  document.getElementById("jogadorAtual").innerText = `üéØ ${jogadorAtual}, √© sua vez!`;
  document.getElementById("desafioTexto").innerText = desafio;

  iniciarTimer();
  atualizarRanking();
}

function cumprir() {
  tocarSom();
  alert(`${jogadorAtual} cumpriu o desafio! ‚úÖ`);
  desafiosCumpridos[jogadorAtual]++;
  proximaRodada();
}

function beber() {
  tocarSom();
  shots[jogadorAtual]++;
  alert(`${jogadorAtual} recusou e tomou um shot! üç∫`);
  proximaRodada();
}

function atualizarRanking() {
  let html = "<h3>Ranking üèÜ</h3>";

  html += "<strong>‚úÖ Corajosos:</strong><ul>";
  for (let nome in desafiosCumpridos) {
    html += `<li>${nome}: ${desafiosCumpridos[nome]} desafio(s) cumprido(s)</li>`;
  }
  html += "</ul>";

  html += "<strong>üç∫ B√™bados:</strong><ul>";
  for (let nome in shots) {
    html += `<li>${nome}: ${shots[nome]} shot(s)</li>`;
  }
  html += "</ul>";

  // HALL DA VERGONHA
  let maiorBebado = Object.keys(shots).reduce((a, b) => shots[a] > shots[b] ? a : b);
  html += `<p>üòµ <strong>Hall da Vergonha:</strong> ${maiorBebado} bebeu mais! (${shots[maiorBebado]} shots)</p>`;

  // ESTAT√çSTICAS GERAIS
  const totalDesafios = Object.values(desafiosCumpridos).reduce((a, b) => a + b, 0);
  const totalShots = Object.values(shots).reduce((a, b) => a + b, 0);
  html += `<p>üìä <strong>Rodadas jogadas:</strong> ${rodadaAtual}</p>`;
  html += `<p>üìà <strong>Total de desafios cumpridos:</strong> ${totalDesafios}</p>`;
  html += `<p>üçª <strong>Total de shots tomados:</strong> ${totalShots}</p>`;

  document.getElementById("ranking").innerHTML = html;
}
